{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider, Card, Layout, Button, Stack, Scrollable, TextStyle, Page } from '@shopify/polaris';\nimport App from './App.js';\nimport Loader from './Loader.js';\nimport Interpreter from './Interpreter.js';\nimport { ArrowUpMinor } from '@shopify/polaris-icons';\nimport axios from 'axios';\nimport Setting from './Setting.js';\nimport MethodSetting from './MethodSetting.js';\nimport Ranger from './Ranger.js';\nimport dynamic from 'next/dynamic';\nvar Rankplot = dynamic(function () {\n  return import('./RankPlot');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./RankPlot')];\n    },\n    modules: ['./RankPlot']\n  }\n});\nvar Maps = dynamic(function () {\n  return import('./Maps');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./Maps')];\n    },\n    modules: ['./Maps']\n  }\n});\n\nvar DashBoard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashBoard, _React$Component);\n\n  function DashBoard(props) {\n    var _this;\n\n    _classCallCheck(this, DashBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashBoard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"storeDisplay\", function (disval, dbval, cat) {\n      if (_this.state.stat === \"generate\") {\n        var dbdata2 = _this.state.dbdata;\n        var flag = dbdata2.some(function (val) {\n          return val === dbval;\n        }); //console.log(flag);\n\n        if (!flag) {\n          var dbdata = _this.state.dbdata;\n          dbdata.push(dbval);\n          var source = _this.state.source;\n          source.push(ArrowUpMinor);\n          var display = _this.state.display;\n          display.push(disval);\n          var category2 = _this.state.category;\n          category2.push(cat);\n          var src = _this.state.src;\n          src.push(1);\n          var range = _this.state.range;\n          range.push(0);\n\n          _this.setState({\n            display: display,\n            dbdata: dbdata,\n            source: source,\n            src: src,\n            category: category2,\n            range: range\n          });\n        }\n      } else {\n        var idbdata = _this.state.idbdata;\n        var flag2 = idbdata.some(function (val) {\n          return val === dbval;\n        });\n\n        if (!flag2) {\n          var _idbdata = _this.state.idbdata;\n\n          _idbdata.push(dbval);\n\n          var idisplay = _this.state.idisplay;\n          idisplay.push(disval);\n          var icategory = _this.state.icategory;\n          icategory.push(cat);\n\n          _this.setState({\n            idbdata: _idbdata,\n            idisplay: idisplay,\n            icategory: icategory\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearArray\", function () {\n      var display = [];\n      var dbdata = [];\n      var source = [];\n      var category = [];\n      var src = [];\n      var range = [];\n      var gresult = {};\n      var gdata = [];\n\n      _this.setState({\n        display: display,\n        dbdata: dbdata,\n        source: source,\n        category: category,\n        src: src,\n        range: range,\n        gresult: gresult,\n        gdata: gdata\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearArray2\", function () {\n      var idbdata = [];\n      var idisplay = [];\n      var icategory = [];\n\n      _this.setState({\n        idbdata: idbdata,\n        idisplay: idisplay,\n        icategory: icategory\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateArray\", function () {\n      var res = {};\n\n      for (var i = 0; i < _this.state.dbdata.length; i++) {\n        res[_this.state.dbdata[i]] = _this.state.range[i] * _this.state.src[i];\n      } // console.log(res);\n\n\n      var cat = \"index\";\n\n      if (_this.state.category[0] == \"crime\") {\n        res['d1'] = _this.state.datequery + '/01/01';\n        res['d2'] = _this.state.datequery + '/12/31';\n      }\n\n      if (_this.state.category[0] === \"incident\") {\n        cat = \"incident\";\n      }\n\n      if (_this.state.category[0] === \"demographics\") {\n        cat = \"dindex\";\n      }\n\n      _this.setState({\n        ajaxLoading: true,\n        ajaxLoading2: true\n      });\n\n      if (_this.state.method === 'lc') {\n        axios.get('http://localhost:5000/rest/' + cat + '/', {\n          params: res\n        }).then(function (result) {\n          //console.log(result.data['resu2']);\n          var res = result.data['sums'].sort(function (a, b) {\n            return a.Index - b.Index;\n          });\n          var indexWeight = {};\n          res.map(function (r) {\n            indexWeight[r.DAUID] = 1;\n          });\n          var sx = res.map(function (r) {\n            return r.DAUID;\n          });\n          console.log(indexWeight, sx);\n\n          _this.setState({\n            ajaxLoading: false,\n            ajaxLoading2: false,\n            gresult: result.data['resu2'],\n            gdata: result.data['sums'],\n            indexWeight: indexWeight,\n            chartX: res.map(function (a) {\n              return a.DAUID;\n            }),\n            chartY: res.map(function (b) {\n              return b.Index;\n            })\n          });\n        });\n      } else {\n        console.log(\"in crimepca method\");\n        axios.get('http://localhost:5000/rest/crimepca/', {\n          params: res\n        }).then(function (result) {\n          //console.log(result.data['resu2']);\n          var res = result.data['sums'].sort(function (a, b) {\n            return a.Index - b.Index;\n          });\n          var indexWeight = {};\n          res.map(function (r) {\n            indexWeight[r.DAUID] = 1;\n          });\n          var sx = res.map(function (r) {\n            return r.DAUID;\n          });\n          console.log(indexWeight, sx);\n\n          _this.setState({\n            ajaxLoading: false,\n            ajaxLoading2: false,\n            gresult: result.data['resu2'],\n            gdata: result.data['sums'],\n            indexWeight: indexWeight,\n            chartX: res.map(function (a) {\n              return a.DAUID;\n            }),\n            chartY: res.map(function (b) {\n              return b.Index;\n            })\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"interpretArray\", function () {\n      var result = {};\n\n      for (var j = 0; j < _this.state.idbdata.length; j++) {\n        result[_this.state.idbdata[j]] = 1;\n      }\n\n      var cat1 = \"interpreter3\";\n\n      if (_this.state.icategory[0] === \"incident\") {\n        cat1 = \"interpreter2\";\n      }\n\n      if (_this.state.icategory[0] === \"demographics\") {\n        cat1 = \"interpreter1\";\n      }\n\n      _this.setState({\n        ajaxLoading: true\n      });\n\n      axios.get('http://localhost:5000/rest/' + cat1 + '/', {\n        params: result\n      }).then(function (result) {\n        var res = result.data['sums'].sort(function (a, b) {\n          return a.Index - b.Index;\n        });\n\n        _this.setState({\n          ajaxLoading: false,\n          iresult: result.data['pred'],\n          idata: result.data['sums'],\n          chartX: res.map(function (a) {\n            return a.DAUID;\n          }),\n          chartY: res.map(function (b) {\n            return b.Index;\n          })\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mutateSource\", function (src) {\n      _this.setState({\n        source: src\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mutateRange\", function (range) {\n      _this.setState({\n        range: range\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setStat\", function (value) {\n      var stat = value;\n\n      _this.setState({\n        stat: stat\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"methodStat\", function (value) {\n      console.log(value, _this.state.stat);\n\n      if (value === \"PCA\") {\n        _this.setState({\n          method: 'pca'\n        });\n      } else {\n        _this.setState({\n          method: 'lc'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHover\", function (data) {\n      console.log(data.points[0].value);\n      console.log(data.points[0].x);\n      console.log(_this.state.chartX[data.points[0].x]);\n      var cdauid = _this.state.chartX[data.points[0].x];\n      var indexWeight = _this.state.indexWeight;\n\n      for (var key in indexWeight) {\n        indexWeight[key] = 1;\n\n        if (key == cdauid) {\n          indexWeight[key] = 6;\n        }\n      }\n\n      _this.setState({\n        indexWeight: indexWeight\n      });\n\n      console.log(_this.state.indexWeight[cdauid]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDateChange\", function (value) {\n      _this.setState({\n        datequery: value\n      });\n\n      var res2 = {};\n      res2['d1'] = _this.state.datequery + '/01/01';\n      res2['d2'] = _this.state.datequery + '/12/31';\n      console.log(res2);\n    });\n\n    _this.state = {\n      idisplay: [],\n      idbdata: [],\n      icategory: [],\n      display: [],\n      dbdata: [],\n      source: [],\n      category: [],\n      src: [],\n      range: [],\n      gendic: [],\n      gresult: {},\n      iresult: {},\n      gdata: [],\n      idata: [],\n      stat: \"generate\",\n      chartX: [],\n      chartY: [],\n      ajaxLoading: false,\n      ajaxLoading2: true,\n      indexWeight: {},\n      method: 'lc',\n      datequery: 2005\n    };\n    return _this;\n  }\n\n  _createClass(DashBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // handleClick(a,b){\n    //    console.log(a,b);\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(AppProvider, null, __jsx(Page, {\n        fullWidth: true,\n        separator: true\n      }, __jsx(Layout, null, __jsx(Layout.Section, {\n        secondary: true\n      }, __jsx(Card, {\n        title: \"Indicators\",\n        actions: [{\n          content: 'Manage'\n        }]\n      }, __jsx(Card.Section, null, __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, \"Choose Indicators\"), __jsx(Setting, {\n        onClick: function onClick(value) {\n          return _this2.setStat(value);\n        }\n      }), __jsx(MethodSetting, {\n        onClick: function onClick(methodvalue) {\n          return _this2.methodStat(methodvalue);\n        }\n      }), __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, \"Date Period for Indicators\"), __jsx(Ranger, {\n        min: 2005,\n        max: 2017,\n        onChange: function onChange(value) {\n          return _this2.handleDateChange(value);\n        }\n      })), __jsx(Card.Section, {\n        title: \"Items\"\n      }, __jsx(Scrollable, {\n        shadow: true,\n        style: {\n          height: '40vh'\n        }\n      }, __jsx(App, {\n        onValueChange: function onValueChange(disval, dbval, cat) {\n          return _this2.storeDisplay(disval, dbval, cat);\n        }\n      }))))), __jsx(Layout.Section, {\n        primary: true\n      }, __jsx(Maps, {\n        genres: this.state.gresult,\n        gendata: this.state.gdata,\n        ajaxload: this.state.ajaxLoading,\n        intres: this.state.iresult,\n        intdata: this.state.idata,\n        iweight: this.state.indexWeight\n      })), __jsx(Layout.Section, null, __jsx(Stack, null, __jsx(Card, {\n        title: \"Selector\"\n      }, __jsx(Card.Section, null, __jsx(Stack, {\n        spacing: \"loose\"\n      }, __jsx(Button, {\n        primary: true,\n        onClick: this.generateArray\n      }, \"Generate\"), __jsx(Button, {\n        primary: true,\n        onClick: this.clearArray\n      }, \"Clear\"))), __jsx(Card.Section, null, __jsx(Scrollable, {\n        shadow: true,\n        style: {\n          height: '20vh',\n          width: '45vh'\n        }\n      }, __jsx(Loader, {\n        data: this.state.display,\n        src: this.state.source,\n        cat: this.state.category,\n        source: this.state.src,\n        range: this.state.range,\n        onSourceChange: function onSourceChange(src) {\n          return _this2.mutateSource(src);\n        },\n        onRangeChange: function onRangeChange(range) {\n          return _this2.mutateRange(range);\n        }\n      })))), __jsx(Card, {\n        title: \"Interpreters\"\n      }, __jsx(Card.Section, null, __jsx(Stack, {\n        spacing: \"loose\"\n      }, __jsx(Button, {\n        primary: true,\n        onClick: this.interpretArray\n      }, \"Interpret\"), __jsx(Button, {\n        primary: true,\n        onClick: this.clearArray2\n      }, \"clear\"))), __jsx(Card.Section, null, __jsx(Scrollable, {\n        shadow: true,\n        style: {\n          height: '20vh',\n          width: '45vh'\n        }\n      }, __jsx(Interpreter, {\n        data: this.state.idisplay,\n        cat: this.state.icategory\n      })))), __jsx(Card, {\n        title: \"Chart\"\n      }, __jsx(Scrollable, {\n        shadow: true,\n        style: {\n          height: '32vh',\n          width: '59vh'\n        }\n      }, !this.state.ajaxLoading2 ? __jsx(Rankplot, {\n        chartY: this.state.chartY,\n        ititle: this.state.ititle,\n        onHover: function onHover(data) {\n          return _this2.handleHover(data);\n        }\n      }) : __jsx(\"p\", null, \"Waiting for the load\"))))))));\n    }\n  }]);\n\n  return DashBoard;\n}(React.Component);\n\nexport default DashBoard;","map":null,"metadata":{},"sourceType":"module"}