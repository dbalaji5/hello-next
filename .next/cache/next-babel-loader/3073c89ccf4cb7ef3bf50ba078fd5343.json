{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/balaji/hello-next/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Map, TileLayer, Popup, LayersControl, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport diss from '../data/Dissemination.json';\nimport '@shopify/polaris/styles.css';\nimport { Card, Layout, Spinner } from '@shopify/polaris';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport BarChart from './BarChart.js';\nvar numMapClicks = 0;\nvar geoMapClicks = 0;\nvar geoMapClicks2 = 0;\n\nvar Maps =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Maps, _React$Component);\n\n  function Maps(props) {\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Maps).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getColor\", function (val) {\n      return val >= -1 && val < -0.75 ? '#a50026' : val >= -0.75 && val < -0.6 ? '#d73027' : val >= -0.6 && val < -0.4 ? '#f46d43' : val >= -0.4 && val < -0.2 ? '#fdae61' : val >= -0.2 && val < 0 ? '#fee08b' : val >= 0.01 && val < 0.1 ? '#d9ef8b' : val >= 0.1 && val < 0.3 ? '#a6d96a' : val >= 0.3 && val < 0.5 ? '#66bd63' : val >= 0.5 && val < 0.75 ? '#1a9850' : val >= 0.75 && val <= 1 ? '#006837' : val >= 0 && val < 0.01 ? '#ffffff' : '#000000';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEachFeature2\", function (feature, layer) {\n      //layer.setStyle({fillColor : this.state.color2 ,color:this.state.color2,opacity:this.state.opacity,fillOpacity:0.4,weight:0.4})\n      if (_this.state.intdata.length === 0) {\n        _this.setState({\n          iLoading: false\n        });\n      } else {\n        _this.setState({\n          iLoading: true\n        });\n      }\n\n      layer.on('click', function (e) {\n        if (_this.state.iLoading) {\n          var data = {};\n          data['DAUID'] = feature.properties.DAUID;\n\n          _this.setState({\n            cmpload: true\n          });\n\n          axios.get('http://localhost:5000/rest/explainer/', {\n            params: data\n          }).then(function (result) {\n            var rX = [];\n            var rY = [];\n            var rdata = result.data['exp'];\n\n            for (var i = 0; i < rdata.length; i++) {\n              rY.push(rdata[i][1]);\n              rX.push(rdata[i][0]);\n            }\n\n            _this.setState({\n              intX: rX,\n              //support@refer.telus.com dexter hugo \n              intY: rY,\n              cmpload: true\n            });\n          });\n        }\n\n        _this.setState({\n          ipopup: true,\n          iposition: e.latlng,\n          key: numMapClicks++,\n          ititle: feature.properties.DAUID\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEachFeature\", function (feature, layer) {\n      var checkDauId = feature.properties.DAUID;\n      layer.on('click', function (e) {\n        _this.setState({\n          gpopup: true,\n          position: e.latlng,\n          key: numMapClicks++\n        });\n\n        if (_this.state.gendata.length === 0) {\n          _this.setState({\n            gLoading: false\n          });\n        } else {\n          _this.setState({\n            gLoading: true\n          });\n        }\n\n        if (_this.state.gLoading) {\n          for (var i = 0; i < _this.state.gendata.length; i++) {\n            if (_this.state.gendata[i].DAUID === checkDauId) {\n              var title = 'Index:' + _this.state.gendata[i].Index;\n\n              _this.setState({\n                genX: _this.state.gendata[i].X,\n                genY: _this.state.gendata[i].Y,\n                gtitle: title\n              });\n\n              break;\n            }\n          }\n        }\n      });\n\n      if (_this.state.gendata.length === 0) {\n        _this.setState({\n          gLoading: false\n        });\n      } else {\n        _this.setState({\n          gLoading: true\n        });\n      } // if(this.state.gLoading){\n      //     layer.setStyle({fillColor : this.getColor(this.state.genres[checkDauId]) ,color:this.getColor(this.state.genres[checkDauId]),opacity:1,fillOpacity:0.3,weight:1})\n      // }\n\n    });\n\n    _this.state = {\n      weight: 0.5,\n      opacity: 1,\n      color: '#ffcc99',\n      color2: '#ff66b2',\n      gpopup: false,\n      ipopup: false,\n      position: [],\n      iposition: [],\n      gtitle: '',\n      ititle: '',\n      key: numMapClicks++,\n      gkey: geoMapClicks++,\n      ikey: geoMapClicks2,\n      gLoading: false,\n      iLoading: false,\n      genres: {},\n      intres: {},\n      gendata: [],\n      intdata: [],\n      genX: [],\n      genY: [],\n      intX: [],\n      intY: [],\n      ajaxload: false,\n      cmpload: false,\n      iweight: {}\n    };\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps, oldState) {\n      if (this.props.genres !== oldState.genres && this.props.gendata !== oldState.gendata || this.props.intres !== oldState.intres && this.props.intdata !== oldState.intdata || this.props.ajaxload !== oldState.ajaxload || this.props.iweight !== oldState.iweight) {\n        this.setState({\n          genres: this.props.genres,\n          gendata: this.props.gendata,\n          gkey: geoMapClicks,\n          ikey: geoMapClicks2,\n          intres: this.props.intres,\n          intdata: this.props.intdata,\n          weight: 1,\n          ajaxload: this.props.ajaxload,\n          iweight: this.props.iweight\n        });\n      } // if(this.props.intres !== oldState.intres && this.props.intdata!==oldState.intdata){\n      //    console.log(this.props.intres);\n      //    this.setState({\n      //      intres:this.props.intres,\n      //      intdata:this.props.intdata\n      //    })\n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = function style(feature) {\n        var checkDauId = feature.properties.DAUID;\n\n        if (_this2.state.gendata.length > 0) {\n          return {\n            fillColor: _this2.getColor(_this2.state.genres[checkDauId]),\n            color: _this2.getColor(_this2.state.genres[checkDauId]),\n            opacity: 1,\n            fillOpacity: 0.3,\n            weight: _this2.state.iweight[checkDauId]\n          };\n        } //   else{\n        //   return ({\n        //       weight: this.state.weight,\n        //       opacity: this.state.opacity\n        //     }\n        //   );\n        // }\n\n      };\n\n      var style2 = function style2(feature) {\n        var checkDauId = feature.properties.DAUID;\n\n        if (_this2.state.intdata.length > 0) {\n          return {\n            fillColor: _this2.getColor(_this2.state.intres[checkDauId]),\n            color: _this2.getColor(_this2.state.intres[checkDauId]),\n            opacity: 1,\n            fillOpacity: 0.3,\n            weight: _this2.state.iweight[checkDauId]\n          };\n        }\n      }; // const onEachFeature2 = (feature,layer) => {\n      //     console.log(feature.properties[\"DAUID\"]);\n      //     layer.setStyle({fillColor : this.state.color2 ,color:this.state.color2,opacity:this.state.opacity,fillOpacity:0.4,weight:0.4})\n      //     layer.on('click',(e)=>{\n      //       this.setState({\n      //          ipopup:true,\n      //          iposition:e.latlng,\n      //          key:numMapClicks++,\n      //          ititle:feature.properties.DAUID\n      //       });\n      //   })\n      // }\n\n\n      return __jsx(Layout.Section, {\n        oneHalf: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(Card, {\n        title: \"Visualization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.ajaxload == false ? __jsx(Map, {\n        center: [44.755113, -63.320488],\n        zoom: 9,\n        style: {\n          height: \"60vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, __jsx(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), __jsx(LayersControl, {\n        position: \"topright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, __jsx(LayersControl.BaseLayer, {\n        name: \"Index\",\n        checked: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, __jsx(GeoJSON // key={this.state.gkey}\n      , {\n        ref: \"geojson2\",\n        data: diss,\n        style: style,\n        onEachFeature: function onEachFeature(feature, layer) {\n          return _this2.onEachFeature(feature, layer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), this.state.gpopup && __jsx(Popup, {\n        key: this.state.key,\n        position: this.state.position,\n        onClose: function onClose() {\n          _this2.setState({\n            popup: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          width: 320 + 'px',\n          height: 240 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.state.gLoading ? __jsx(Plot, {\n        data: [{\n          type: 'bar',\n          x: this.state.genX,\n          y: this.state.genY,\n          marker: {\n            color: '#74C67A',\n            line: {\n              width: 2.5\n            }\n          }\n        }],\n        layout: {\n          width: 320,\n          height: 240,\n          title: this.state.gtitle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }) : __jsx(Spinner, {\n        accessibilityLabel: \"Spinner example\",\n        size: \"large\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })))), __jsx(LayersControl.BaseLayer, {\n        name: \"Interpret\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(GeoJSON, {\n        key: this.state.ikey,\n        ref: \"geojson\",\n        data: diss,\n        style: style2,\n        onEachFeature: function onEachFeature(feature, layer) {\n          return _this2.onEachFeature2(feature, layer);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), this.state.ipopup && __jsx(Popup, {\n        key: this.state.key,\n        position: this.state.iposition,\n        onClose: function onClose() {\n          _this2.setState({\n            ipopup: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          width: 320 + 'px',\n          height: 240 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, this.state.iLoading && this.state.cmpload ? __jsx(Plot, {\n        data: [{\n          type: 'bar',\n          x: this.state.intX,\n          y: this.state.intY,\n          marker: {\n            color: '#C8A2C8',\n            line: {\n              width: 2.5\n            }\n          }\n        }],\n        layout: {\n          width: 320,\n          height: 240,\n          title: this.state.ititle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }) : __jsx(Spinner, {\n        accessibilityLabel: \"Spinner example\",\n        size: \"large\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })))))) : __jsx(Spinner, {\n        accessibilityLabel: \"Spinner example\",\n        size: \"large\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Maps;\n}(React.Component);\n\nexport default Maps;","map":{"version":3,"sources":["/home/balaji/hello-next/components/Maps.js"],"names":["React","Map","TileLayer","Popup","LayersControl","GeoJSON","diss","Card","Layout","Spinner","Plot","axios","BarChart","numMapClicks","geoMapClicks","geoMapClicks2","Maps","props","val","feature","layer","state","intdata","length","setState","iLoading","on","e","data","properties","DAUID","cmpload","get","params","then","result","rX","rY","rdata","i","push","intX","intY","ipopup","iposition","latlng","key","ititle","checkDauId","gpopup","position","gendata","gLoading","title","Index","genX","X","genY","Y","gtitle","weight","opacity","color","color2","gkey","ikey","genres","intres","ajaxload","iweight","oldProps","oldState","style","fillColor","getColor","fillOpacity","style2","height","onEachFeature","popup","width","type","x","y","marker","line","onEachFeature2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, TileLayer,Popup,LayersControl,GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport diss from '../data/Dissemination.json';\nimport '@shopify/polaris/styles.css';\nimport {Card,Layout,Spinner} from '@shopify/polaris';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport BarChart from './BarChart.js';\n\n\nlet numMapClicks = 0\nlet geoMapClicks=0\nlet geoMapClicks2=0\n\n  class Maps extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          weight: 0.5,\n          opacity: 1,\n          color: '#ffcc99',\n          color2: '#ff66b2',\n          gpopup: false,\n          ipopup:false,\n          position:[],\n          iposition:[],\n          gtitle:'',\n          ititle:'',\n          key:numMapClicks++,\n          gkey:geoMapClicks++,\n          ikey:geoMapClicks2,\n          gLoading:false,\n          iLoading:false,\n          genres:{},\n          intres:{},\n          gendata:[],\n          intdata:[],\n          genX:[],\n          genY:[],\n          intX:[],\n          intY:[],\n          ajaxload:false,\n          cmpload:false,\n          iweight:{}\n        };\n      }\n      componentDidUpdate(oldProps,oldState){\n    \n        \n        if((this.props.genres !== oldState.genres && this.props.gendata!==oldState.gendata) || (this.props.intres !== oldState.intres && this.props.intdata!==oldState.intdata)  || (this.props.ajaxload!== oldState.ajaxload) || (this.props.iweight!== oldState.iweight)){\n         \n        \n            this.setState({\n                genres:this.props.genres,\n                gendata:this.props.gendata,\n                gkey:geoMapClicks,\n                ikey:geoMapClicks2,\n                intres:this.props.intres,\n                intdata:this.props.intdata,\n                weight:1,\n                ajaxload:this.props.ajaxload,\n                iweight:this.props.iweight\n            });\n          \n        }\n        // if(this.props.intres !== oldState.intres && this.props.intdata!==oldState.intdata){\n        //    console.log(this.props.intres);\n        //    this.setState({\n        //      intres:this.props.intres,\n        //      intdata:this.props.intdata\n        //    })\n        // }\n    }\n\n     getColor = (val) => {\n\n\n      return val>=-1 && val < -0.75? '#a50026':\n             val>=-0.75 && val < -0.6 ? '#d73027':\n             val>=-0.6 && val < -0.4 ? '#f46d43':\n             val>=-0.4 && val < -0.2 ? '#fdae61':\n             val>=-0.2 && val < 0 ? '#fee08b':\n             val>=0.01   &&  val <0.1 ? '#d9ef8b':\n             val>=0.1 && val < 0.3 ? '#a6d96a':\n             val>=0.3 && val < 0.5 ? '#66bd63':\n             val>=0.5 && val < 0.75 ? '#1a9850':\n             val >= 0.75 && val <= 1 ? '#006837':\n             val>=0 && val <0.01 ? '#ffffff':\n                                   '#000000';\n\n    };\n\n    onEachFeature2 = (feature,layer) => {\n      //layer.setStyle({fillColor : this.state.color2 ,color:this.state.color2,opacity:this.state.opacity,fillOpacity:0.4,weight:0.4})\n      if(this.state.intdata.length===0){\n        this.setState({\n            iLoading:false\n        })\n        }\n        else{\n            this.setState({\n                iLoading:true\n            })\n        }\n      layer.on('click',(e)=>{\n       \n        if(this.state.iLoading){\n        var data={}\n        data['DAUID']=feature.properties.DAUID;\n        this.setState({\n           cmpload:true\n        })\n        axios.get('http://localhost:5000/rest/explainer/',{params:data})\n        .then(result => {\n\n          \n          var rX=[]\n          var rY=[]\n          var rdata=result.data['exp'];\n          for(var i=0;i<rdata.length;i++){\n              rY.push(rdata[i][1])\n              rX.push(rdata[i][0])\n          }\n     \n          this.setState(\n\n            {\n               intX:rX,\n               //support@refer.telus.com dexter hugo \n               intY:rY,\n               cmpload:true\n            }\n          )\n        });\n      }\n        this.setState({\n           ipopup:true,\n           iposition:e.latlng,\n           key:numMapClicks++,\n           ititle:feature.properties.DAUID\n        });\n    });\n  }\n   \n\n     onEachFeature = (feature,layer) => {\n\n\n      var checkDauId=feature.properties.DAUID;\n      layer.on('click',(e)=>{\n          \n          this.setState({\n             gpopup:true,\n             position:e.latlng,\n             key:numMapClicks++,\n             \n          });\n          if(this.state.gendata.length===0){\n              this.setState({\n                  gLoading:false\n              })\n          }\n          else{\n              this.setState({\n                  gLoading:true\n              })\n          }\n          if(this.state.gLoading){\n            for(var i=0;i<this.state.gendata.length;i++){\n\n                if(this.state.gendata[i].DAUID===checkDauId){\n                    const title='Index:'+this.state.gendata[i].Index;\n                    this.setState(\n\n                      {\n                         genX:this.state.gendata[i].X,\n                         genY:this.state.gendata[i].Y,\n                         gtitle:title\n                      }\n                    )\n                    \n                    break;\n                }\n            }\n          }\n      });\n    if(this.state.gendata.length===0){\n      this.setState({\n          gLoading:false\n      })\n  }\n  else{\n      this.setState({\n          gLoading:true\n      })\n  }\n  // if(this.state.gLoading){\n  //     layer.setStyle({fillColor : this.getColor(this.state.genres[checkDauId]) ,color:this.getColor(this.state.genres[checkDauId]),opacity:1,fillOpacity:0.3,weight:1})\n  // }\n  }\n    render(){\n\n        \n\n        var style = (feature) => {\n            var checkDauId=feature.properties.DAUID;\n            if(this.state.gendata.length>0){\n                return ({\n                    fillColor: this.getColor(this.state.genres[checkDauId]),\n                    color:this.getColor(this.state.genres[checkDauId]),\n                    opacity:1,\n                    fillOpacity:0.3,\n                    weight:this.state.iweight[checkDauId]\n                });\n            }\n          //   else{\n          //   return ({\n                \n          //       weight: this.state.weight,\n          //       opacity: this.state.opacity\n          //     }\n          //   );\n          // }\n    \n        }\n       \n      var style2 = (feature) => {\n        var checkDauId=feature.properties.DAUID;\n        if(this.state.intdata.length>0){\n            return ({\n                fillColor: this.getColor(this.state.intres[checkDauId]),\n                color:this.getColor(this.state.intres[checkDauId]),\n                opacity:1,\n                fillOpacity:0.3,\n                weight:this.state.iweight[checkDauId]\n            });\n        }\n  \n      }\n      // const onEachFeature2 = (feature,layer) => {\n\n      //     console.log(feature.properties[\"DAUID\"]);\n      //     layer.setStyle({fillColor : this.state.color2 ,color:this.state.color2,opacity:this.state.opacity,fillOpacity:0.4,weight:0.4})\n      //     layer.on('click',(e)=>{\n            \n      //       this.setState({\n      //          ipopup:true,\n      //          iposition:e.latlng,\n      //          key:numMapClicks++,\n      //          ititle:feature.properties.DAUID\n      //       });\n      //   })\n      // }\n        return (\n          \n          <Layout.Section oneHalf>\n          <Card title=\"Visualization\">\n          {(this.state.ajaxload==false)?(\n            <Map center={[44.755113, -63.320488]} zoom={9} style={{ height: \"60vh\" }} >\n                <TileLayer\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n              />\n             \n              <LayersControl position=\"topright\">\n              \n              <LayersControl.BaseLayer name=\"Index\" checked=\"true\">\n              <GeoJSON \n                // key={this.state.gkey}\n                ref=\"geojson2\"\n                data={diss}\n                style={style}\n                onEachFeature={(feature,layer)=>this.onEachFeature(feature,layer)}\n              />\n            \n               {this.state.gpopup && <Popup key={this.state.key} position={this.state.position} onClose={()=>{this.setState({popup:false})}}>\n               <div style={{width:320+'px',height:240+'px'}}>\n               {(this.state.gLoading)?(<Plot\n                    data={[\n                      {type: 'bar',\n                              x: this.state.genX,\n                              y: this.state.genY,\n                              marker: {\n                                  color: '#74C67A',\n                                  line: {\n                                      width: 2.5\n                                        }\n                               }\n                       }\n                    ]}\n                    layout={ {width: 320, height: 240, title: this.state.gtitle} }\n               />):(<Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\" />)}\n                  </div>\n                </Popup>\n                \n                }\n            \n              </LayersControl.BaseLayer>\n              <LayersControl.BaseLayer name=\"Interpret\">\n              <GeoJSON \n                key={this.state.ikey}\n                ref=\"geojson\"\n                data={diss}\n                style={style2}\n                onEachFeature={(feature,layer)=>this.onEachFeature2(feature,layer)}\n              />\n              {this.state.ipopup && <Popup key={this.state.key} position={this.state.iposition} onClose={()=>{this.setState({ipopup:false})}}>\n              <div style={{width:320+'px',height:240+'px'}}>\n              {(this.state.iLoading && this.state.cmpload)?(<Plot\n                    data={[\n                      {type: 'bar',\n                              x: this.state.intX,\n                              y: this.state.intY,\n                              marker: {\n                                  color: '#C8A2C8',\n                                  line: {\n                                      width: 2.5\n                                        }\n                               }\n                       }\n                    ]}\n                    layout={ {width: 320, height: 240, title: this.state.ititle} }\n                  />):(<Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\" />)}\n                  </div>\n                </Popup>}\n            \n              </LayersControl.BaseLayer>\n              </LayersControl>\n              \n\n            </Map>):\n           <Spinner accessibilityLabel=\"Spinner example\" size=\"large\" color=\"teal\" />}\n\n      </Card>\n      {/* <Card title=\"demo\">\n        <div id=\"te\">\n\n                 {(this.state.gLoading)?(<BarChart data={this.state.gendata}/>):<p>Waiting for Contents</p>}\n        </div>\n      </Card> */}\n    </Layout.Section>\n  );\n    \n  };\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}