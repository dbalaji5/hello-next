{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"overClick\", function (e) {\n      e.target.style = \"cursor:pointer;text-decoration:underline;\";\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClicker\", function (e) {\n      var disval = e.target.textContent;\n      var dbval = e.target.parentElement.getAttribute(\"title\");\n      var category = e.target.getAttribute(\"title\");\n\n      _this.props.onValueChange(disval, dbval, category);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClicker2\", function (e) {\n      var disval = e.target.textContent;\n      var dbval = e.target.parentElement.getAttribute(\"title\");\n      var category = e.target.getAttribute(\"title\");\n\n      _this.props.onValueChange(disval, dbval, category);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      e.target.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n      e.target.classList.toggle(\"caret-down\"); //this.props.onClick(e.target.parentElement.getAttribute(\"title\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick2\", function (e) {\n      e.target.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n      e.target.classList.toggle(\"caret-down\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"outClick\", function (e) {\n      e.target.style = \"text-decoration:none\";\n    });\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:5000/rest/\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var ligen = function ligen(item, txt) {\n        return _Object$keys(item).map(function (element) {\n          return element === \"none\" ? item[\"none\"].map(function (el) {\n            return __jsx(\"li\", {\n              key: el,\n              title: txt.concat('|', el)\n            }, __jsx(\"span\", {\n              \"class\": \"caret\",\n              title: \"demographics\",\n              onClick: _this3.handleClicker,\n              onMouseOver: _this3.overClick,\n              onMouseOut: _this3.outClick\n            }, el));\n          }) : __jsx(\"li\", {\n            key: element,\n            title: txt !== '' ? txt.concat('|', element) : element\n          }, __jsx(\"span\", {\n            \"class\": \"caret\",\n            onClick: _this3.handleClick,\n            onMouseOver: _this3.overClick,\n            onMouseOut: _this3.outClick\n          }, element), __jsx(\"ul\", {\n            \"class\": \"nested\"\n          }, ligen(item[element], txt !== '' ? txt.concat('|', element) : element)));\n        });\n      };\n\n      var ligen2 = function ligen2(item, cat) {\n        return _Object$keys(item).map(function (element) {\n          return element === \"none\" ? item[element].map(function (el) {\n            return __jsx(\"li\", {\n              key: el,\n              title: el\n            }, __jsx(\"span\", {\n              \"class\": \"caret\",\n              title: cat,\n              onClick: _this3.handleClicker2,\n              onMouseOver: _this3.overClick,\n              onMouseOut: _this3.outClick\n            }, el));\n          }) : __jsx(\"li\", {\n            key: element\n          }, __jsx(\"span\", {\n            \"class\": \"caret\",\n            onClick: _this3.handleClick,\n            onMouseOver: _this3.overClick,\n            onMouseOut: _this3.outClick\n          }, element), __jsx(\"ul\", {\n            \"class\": \"nested\"\n          }, _Array$isArray(item[element]) ? item[element].filter(function (el) {\n            return el !== \" \";\n          }).map(function (el) {\n            return __jsx(\"li\", {\n              key: el,\n              title: el\n            }, __jsx(\"span\", {\n              \"class\": \"caret\",\n              title: cat,\n              onClick: _this3.handleClicker2,\n              onMouseOver: _this3.overClick,\n              onMouseOut: _this3.outClick\n            }, el));\n          }) : ligen2(item[element], cat)));\n        });\n      };\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return __jsx(\"div\", null, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return __jsx(\"div\", null, \"Loading...\");\n      } else {\n        var list1 = ligen(items['dem'], '');\n        var list2 = ligen2(items['inc'], 'incident');\n        var list3 = ligen2(items['ret'], 'crime');\n        return __jsx(\"div\", null, __jsx(\"ul\", null, __jsx(\"li\", {\n          title: \"demo\"\n        }, __jsx(\"span\", {\n          \"class\": \"caret\",\n          onClick: this.handleClick,\n          onMouseOver: this.overClick,\n          onMouseOut: this.outClick\n        }, \"Demographics\"), __jsx(\"ul\", {\n          \"class\": \"nested\"\n        }, list1)), list2, __jsx(\"li\", null, __jsx(\"span\", {\n          \"class\": \"caret\",\n          onClick: this.handleClick2,\n          onMouseOver: this.overClick,\n          onMouseOut: this.outClick\n        }, \" Crime\"), __jsx(\"ul\", {\n          \"class\": \"nested\"\n        }, list3))));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}