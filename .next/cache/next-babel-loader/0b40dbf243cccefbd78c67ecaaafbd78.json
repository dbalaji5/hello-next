{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport '@shopify/polaris/styles.css';\nimport { AppProvider, Layout, Card, Scrollable, Page } from '@shopify/polaris';\nimport './Comparator.css';\nimport axios from 'axios';\nimport dynamic from 'next/dynamic';\nconst Pieplot = dynamic(() => import('./PiePlot'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./PiePlot')],\n    modules: ['./PiePlot']\n  }\n});\nconst MapsComp = dynamic(() => import('./MapsComp'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./MapsComp')],\n    modules: ['./MapsComp']\n  }\n});\n\nclass Comparator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"stylesetter\", e => {\n      var n = e.target.parentElement.nextSibling;\n      var p = e.target.parentElement.previousSibling;\n      e.target.parentElement.style = \"background:#4157c559\";\n\n      while (n) {\n        n.style.background = \"white\";\n        n = n.nextSibling;\n      }\n\n      while (p) {\n        p.style.background = \"white\";\n        p = p.previousSibling;\n      }\n    });\n\n    _defineProperty(this, \"comparator\", (val, cat) => {\n      if (cat === 'A') {\n        this.setState({\n          valA: val\n        });\n      } else {\n        this.setState({\n          valB: val\n        });\n      }\n\n      if (this.state.valA !== \"\" && this.state.valB !== \"\") {\n        var tempArr = [];\n        tempArr.push(this.state.valA);\n        tempArr.push(this.state.valB);\n        this.setState({\n          loading: true\n        });\n        var param = {};\n        param['index'] = tempArr;\n        console.log(param);\n        axios.get('http://localhost:5000/rest/comparisor/', {\n          params: tempArr\n        }).then(result => {\n          console.log(result.data.result);\n          this.setState({\n            compres: result.data.result,\n            loading: false\n          });\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleClick\", e => {\n      this.stylesetter(e);\n      var par = {};\n      par['value'] = e.target.textContent;\n      console.log(par);\n      axios.get('http://localhost:5000/rest/pie/', {\n        params: par\n      }).then(result => {\n        this.setState({\n          weight1: result.data.pie['weight'],\n          variable1: result.data.pie['variable'],\n          pieLoading1: true\n        });\n        this.comparator(par['value'], 'A');\n      });\n    });\n\n    _defineProperty(this, \"handleClick2\", e => {\n      this.stylesetter(e);\n      var par = {};\n      par['value'] = e.target.textContent;\n      axios.get('http://localhost:5000/rest/pie/', {\n        params: par\n      }).then(result => {\n        this.setState({\n          weight2: result.data.pie['weight'],\n          variable2: result.data.pie['variable'],\n          pieLoading2: true\n        });\n        this.comparator(par['value'], 'B');\n      });\n    });\n\n    this.state = {\n      index1: [],\n      index2: [],\n      weight1: [],\n      variable1: [],\n      weight2: [],\n      variable2: [],\n      valA: \"\",\n      valB: \"\",\n      pieLoading1: false,\n      pieLoading2: false,\n      compres: {},\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/rest/collector/\").then(res => res.json()).then(result => {\n      console.log(result.indices['index1']);\n      console.log(result.indices['index2']);\n      this.setState({\n        index1: result.indices['index1'],\n        index2: result.indices['index2']\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return __jsx(AppProvider, null, __jsx(Page, {\n      fullWidth: true,\n      separator: true\n    }, __jsx(Layout, null, __jsx(Layout.Section, {\n      oneThird: true,\n      primary: true\n    }, __jsx(Card, {\n      title: \"IndexA\"\n    }, __jsx(Scrollable, {\n      shadow: true,\n      style: {\n        height: '60vh'\n      }\n    }, __jsx(\"div\", null, __jsx(\"ul\", {\n      id: \"myUL\"\n    }, this.state.index1.map(item => __jsx(\"li\", {\n      key: item + 'A'\n    }, __jsx(\"span\", {\n      class: \"caret ind1\",\n      onClick: this.handleClick\n    }, item))))))), __jsx(Card, {\n      title: \"Proportion Chart\"\n    }, __jsx(\"div\", null, this.state.pieLoading1 ? __jsx(Pieplot, {\n      weight: this.state.weight1,\n      variable: this.state.variable1,\n      title: this.state.gtitle\n    }) : __jsx(\"p\", null, \"Waiting for the Selection\")))), __jsx(Layout.Section, {\n      oneThird: true,\n      secondary: true\n    }, __jsx(Card, {\n      title: \"IndexB\"\n    }, __jsx(Scrollable, {\n      shadow: true,\n      style: {\n        height: '60vh'\n      }\n    }, __jsx(\"div\", null, __jsx(\"ul\", {\n      id: \"myUL\"\n    }, this.state.index2.map(item => __jsx(\"li\", {\n      key: item + 'B'\n    }, __jsx(\"span\", {\n      class: \"caret ind1\",\n      onClick: this.handleClick2\n    }, item))))))), __jsx(Card, {\n      title: \"Proportion Chart\"\n    }, __jsx(\"div\", null, this.state.pieLoading2 ? __jsx(Pieplot, {\n      weight: this.state.weight2,\n      variable: this.state.variable2,\n      title: this.state.gtitle\n    }) : __jsx(\"p\", null, \"Waiting for the Selection\")))), __jsx(Layout.Section, {\n      oneHalf: true\n    }, __jsx(Card, {\n      title: \"Maps\"\n    }, __jsx(MapsComp, {\n      data: this.state.compres,\n      loading: this.state.loading\n    }))))));\n  }\n\n}\n\nexport default Comparator;","map":null,"metadata":{},"sourceType":"module"}